@page "/"
@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase
<PageTitle>Test Page</PageTitle>

<br/>
<h1>Inventory</h1>

<div class="grid">
    <div class="row">
        <div class="col-6">
            <span class="col-12">Nome</span>
            <input type="text" @bind="name" class="form-control" />
        </div>
        <div class="col-6">
            <button @onclick="SearchInventory" class="btn btn-primary">Pesquisar</button>
        </div>
    </div>
</div>

@if (inventories is not null && inventories.Count > 0)
{
<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Name</th>
        <th>Price</th>
        <th>Quantity</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var inventory in inventories)
    {
    <tr>
        <td>@inventory.Id</td>
        <td>@inventory.Name</td>
        <td>@inventory.Price</td>
        <td>@inventory.Quantity</td>
    </tr>
    }
    </tbody>
</table>
}
else
{
<p><em>Loading...</em></p>
}

@code {
private List<Inventory>? inventories;
private string name = string.Empty;

protected override async Task OnInitializedAsync()
{
    inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync()).ToList();
}

private async Task SearchInventory()
{
    inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync(name)).ToList();
}
}
